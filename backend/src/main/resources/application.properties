# we can override all these properties at runtime using microprofile config convention, e.g.:
# * using system properties `java -Dquarkus.http.port=8080 ...`
# * or env vars `QUARKUS_HTTP_PORT=8080`
# see: https://quarkus.io/guides/config-reference#configuration-sources

quarkus.http.port=9090

quarkus.oidc.application-type=service
quarkus.oidc.client-id=cryptomator-hub

hub.config.path=hub.properties
%test.hub.config.path=target/hub-test.properties

# Keycloak dev service
%dev.quarkus.keycloak.devservices.enabled=true
%dev.quarkus.keycloak.devservices.create-realm=false
%dev.quarkus.keycloak.devservices.service-name=quarkus-cryptomator-hub
%dev.quarkus.keycloak.devservices.image-name=quay.io/keycloak/keycloak:15.0.2
%dev.quarkus.keycloak.devservices.grant.type=code
# TODO: remove quarkus.keycloak.devservices.realm-name, once we can safe quarkus.oidc.auth-server-url in config
%dev.quarkus.keycloak.devservices.realm-name=cryptomator
# OIDC will be mocked during unit tests. Use fake auth url to prevent dev services to start:
%test.quarkus.oidc.auth-server-url=http://localhost:43210/dev/null

# Expose OpenAPI and SwaggerUI
quarkus.swagger-ui.enable=false
%dev.quarkus.swagger-ui.enable=true
%dev.quarkus.swagger-ui.title=Hub API
%dev.quarkus.swagger-ui.oauth-use-pkce-with-authorization-code-grant=true

# Database
quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url=jdbc:h2:mem:default;DB_CLOSE_DELAY=-1
quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
quarkus.flyway.migrate-at-start=true
%dev.quarkus.flyway.locations=db/migration,db/test-migration
%test.quarkus.flyway.locations=db/migration,db/test-migration

# log Hibernate SQL statements including values, for dev-purpose only
%dev.quarkus.log.min-level=TRACE
%dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.hibernate-orm.log.bind-parameters=true

# Allow cross-origin requests in DEV profile
%dev.quarkus.http.cors=true